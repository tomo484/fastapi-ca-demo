
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: taskdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  fastapi-app:
    build:
      context: ./fastapi-app
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/taskdb
      - PYTHONPATH=/app
      - DEBUG=true
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,https://127.0.0.1:3000
    volumes:
      - ./fastapi-app:/app
    networks:
      - app-network
    restart: unless-stopped
  
  nextjs-app:
    build: 
      context: ./nextjs-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      fastapi-app:
        condition: service_started
    environment:
      - NEXT_PUBLIC_API_URL=http://fastapi-app:8000
    volumes:
      - ./nextjs-app:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped
    command: ["pnpm", "dev"]

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge